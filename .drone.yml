workspace:
  path: /rotbd

kind: pipeline
name: default

steps:
- name: submodules
  image: alpine/git
  commands:
  - git submodule update --init --recursive
- name: pre-process
  image: thejanne/bztools:latest
  when:
    branch:
    - master
    event:
    - tag
  commands:
    - mkdir /tmp/files
    - mkdir /tmp/lua
    #- find /rotbd -type f \( -name "*.lua" -o -name "*.squish" \) -exec cp {} /tmp/lua \;
    - find /rotbd/src -type f \( -name "*.lua" -o -name "*.lua" \) -exec cp {} /tmp/lua \;
    - find /rotbd/deps/BZ98R-Advanced-Lua-API/baked -type f \( -name "*.lua" -o -name "*.lua" \) -exec cp {} /tmp/lua \;
    #- python3 /bztools/luaSquish.py /tmp/lua -r
    - find /rotbd/src -not -ipath '*/\.*' -not -name '*.lua' -not -name '*.bin' -type f -exec cp {} /tmp/files \;
    - find /tmp/lua -name '*.lua' -type f -exec mv {} /tmp/files \;
    #- python3 /bztools/textToSpeech.py /tmp/files
    - python3 /bztools/crlf_fixer.py /tmp/files
    - mkdir -p /rotbd/build
    - zip -j -r /rotbd/build/rotbd_${DRONE_TAG}.zip /tmp/files
    #- find -type f -name '*.bzn' -exec python3 /bztools/bznDown.py {} {} \;
    #- zip -j -r /rotbd/build/rotbd_1.5c_${DRONE_TAG}.zip /tmp/files
    #- cp /rotbd/build/rotbd_1.5c_${DRONE_TAG}.zip /rotbd/build/rotbd_1.5c_latest.zip
    - cp /rotbd/build/rotbd_${DRONE_TAG}.zip /rotbd/build/rotbd_latest.zip

- name: upload
  image: plugins/s3
  when:
    branch:
    - master
    event:
    - tag
  settings:
    bucket: buildstorage
    access_key:
      from_secret: storage_access_key
    secret_key:
      from_secret: storage_secret_key
    source: /rotbd/build/*.zip
    target: /battlezone/
    acl: public-read
    endpoint: https://s3.nl-ams.scw.cloud
    region: nl-ams

- name: notification-success
  image: thejanne/bztools:latest
  when:
    branch:
    - master
    event:
    - tag
    status:
    - success
    environment:
      WEBHOOK:
        from_secret: webhook
    commands:
      - python3 /bztools/webhook.py /rotbd/.webhook.payload $WEBHOOK -kv "status=SUCCESS" "tag=${DRONE_TAG}" "buildlink=https://cloud.drone.io/Heracles-Brigade/rotbd/${DRONE_BUILD_NUMBER}" "repolink=${DRONE_REPO_LINK}" "repo=${DRONE_REPO_NAME}" "event=${DRONE_BUILD_EVENT}"
  
- name: notification-fail
  image: thejanne/bztools:latest
  when:
    branch:
    - master
    event:
    - tag
    status:
    - failure
    environment:
      WEBHOOK:
        from_secret: webhook
    commands: 
      - python3 /bztools/webhook.py /rotbd/.webhook.fail $WEBHOOK -kv "status=FAIL" "tag=${DRONE_TAG}" "buildlink=https://cloud.drone.io/Heracles-Brigade/rotbd/${DRONE_BUILD_NUMBER}" "repolink=${DRONE_REPO_LINK}" "repo=${DRONE_REPO_NAME}" "event=${DRONE_BUILD_EVENT}"
    



